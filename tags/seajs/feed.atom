<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Recent Blog Posts</title>
  <id>/develop-notes/feed.atom</id>
  <updated>2012-05-01T00:00:00Z</updated>
  <link href="/develop-notes/" />
  <link href="/develop-notes/feed.atom" rel="self" />
  <subtitle type="text">Recent blog posts</subtitle>
  <generator>Werkzeug</generator>
  <entry xml:base="/develop-notes/feed.atom">
    <title type="text">Seajs Anti-pattern</title>
    <id>/develop-notes/2012/05/01/seajs-anti-pattern</id>
    <updated>2012-05-01T00:00:00Z</updated>
    <link href="/develop-notes/2012/05/01/seajs-anti-pattern" />
    <author>
      <name>稻草人.L</name>
    </author>
    <content type="html">&lt;p&gt;以下纯属记录, 未经严格验证, 不应推广!!&lt;/p&gt;
&lt;div class="section" id="module"&gt;
&lt;h2&gt;非独立文件module&lt;/h2&gt;
&lt;p&gt;seajs的 &lt;a class="reference external" href="http://seajs.org/docs/module-definition.html#module-definition"&gt;Module Definition&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
In SeaJS, any JavaScript file should be written in module format,
and files and modules are in one-to-one correspondence.
&lt;/pre&gt;
&lt;p&gt;但查看spm build 出来的文件, 其依旧遵从下面的模式, 只是, id是带域名/链接的构成.&lt;/p&gt;
&lt;blockquote&gt;
define(id?, dependencies?, factory);&lt;/blockquote&gt;
&lt;p&gt;所以, 可以在非独立js文件里面定义module, 像requirejs一样, 指定id和dependencies. 不过猜想, 在path中需要另外指定对应id的路径, 至于是不是必需, 待验证&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="require-nature-javascript-lib"&gt;
&lt;h2&gt;require nature javascript lib&lt;/h2&gt;
&lt;p&gt;不可否认Requirejs的作者 &lt;a class="reference external" href="https://github.com/jrburke"&gt;James Burke&lt;/a&gt; 的魅力, 说服jquery把AMD加到了代码是实默认支持中. 而在seajs, 要做到:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;var $ = require(&amp;#39;jquery&amp;#39;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还需要额外对jquery源码进行一个封装. 其实, 自己还是蛮喜欢 write javascript the javascript way. 懒得对一个现成lib都进行一次封装. 将seajs这部分当成简单的包依赖管理来用, 直接 require('jquery'), 让其回归全局. 再直接用$来调用, 也是可行的.&lt;/p&gt;
&lt;p&gt;不过, 按seajs的设计来看, 属于坏习惯.&lt;/p&gt;
&lt;p&gt;&amp;lt;Tue May  1 01:34:37 CST 2012&amp;gt;&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="/develop-notes/feed.atom">
    <title type="text">Using Bootstrap with Seajs or Requirejs</title>
    <id>/develop-notes/2012/04/30/using-bootstrap-with-seajs-or-requirejs</id>
    <updated>2012-04-30T00:00:00Z</updated>
    <link href="/develop-notes/2012/04/30/using-bootstrap-with-seajs-or-requirejs" />
    <author>
      <name>稻草人.L</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="http://twitter.github.com/bootstrap/"&gt;Bootstrap&lt;/a&gt; 提供了常用的jQuery plugins. 虽然可以打包一次全部使用也不见得很大, 但如果真想按需使用, 就用到了 &lt;a class="reference external" href="http://wiki.commonjs.org/wiki/Modules"&gt;Module Loader&lt;/a&gt;. seajs和requirejs在我这还处于对比阶段, 所以, 颇显麻烦地对比使用了一次.&lt;/p&gt;
&lt;p&gt;首先给出简单的modal的初始化实现. ps. bootstrap的js代码和jquery放在同一个目录下面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jquery&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bootstrap-modal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;start init modal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#lanchModal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
             &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#myModal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;toggle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;init&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个定义方式, 是requrejs里面默认支持; 其实, seajs虽然没显示说明, 但还是支持的(&lt;a class="reference external" href="http://seajs.org/docs/module-definition.html#module-definition"&gt;Module Definition&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
** NOTICE: It is highly recommended to ignore the id and dependencies arguments in the define statement.
The optimization tool will generate these arguments automatically in the deployment phase.
&lt;/pre&gt;
&lt;p&gt;&amp;quot;The sea, holding water from thousands of rivers, is huge owing to its capacity.&amp;quot;, 如果说seajs不支持此方式, 感觉就对不起这样的定义了.&lt;/p&gt;
&lt;p&gt;seajs的配置/调用代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// require sea.js or sea-debug.js&lt;/span&gt;
&lt;span class="nx"&gt;seajs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./path/to/lib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;seajs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;start calling foo using seajs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;把requirejs的实现也先摆上来:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// require require.js&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./bootstrap/js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;start calling foo using requirejs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因为是最后的实验结果, 导致已经看不出seajs和requirejs的不同了. seajs推荐的方式是把module放到一个独立的文件里面, 采用 define(function(require, export, module){}) 的 &lt;a class="reference external" href="http://wiki.commonjs.org/wiki/Modules/Wrappings"&gt;Modules/Wrappings&lt;/a&gt; 模式.&lt;/p&gt;
&lt;p&gt;这里不对比seajs和requirejs. 只是有一点可以确认的, seajs依旧可以把modules定义到同一个文件里面,  现在没考虑spm进来, 所以也不确认是否会引起什么问题. 此问题再追究.&lt;/p&gt;
&lt;p&gt;现在, 依旧可以用seajs来管理实现对bootstrap的js的依赖, 按需索取.&lt;/p&gt;
&lt;p&gt;整个demo页面记录在了github, &lt;a class="reference external" href="https://github.com/Tukki/codesnippet/blob/master/javascript/bootstrap-with-seajs.html"&gt;bootstrap with seajs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;Tue May  1 01:05:54 CST 2012&amp;gt;&lt;/p&gt;
</content>
  </entry>
</feed>

