<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Recent Blog Posts</title>
  <id>/develop-notes/feed.atom</id>
  <updated>2011-12-01T00:00:00Z</updated>
  <link href="/develop-notes/" />
  <link href="/develop-notes/feed.atom" rel="self" />
  <subtitle type="text">Recent blog posts</subtitle>
  <generator>Werkzeug</generator>
  <entry xml:base="/develop-notes/feed.atom">
    <title type="text">about The Hacker News Ranking</title>
    <id>/develop-notes/2011/11/28/about-the-hacker-news-ranking</id>
    <updated>2011-11-28T00:00:00Z</updated>
    <link href="/develop-notes/2011/11/28/about-the-hacker-news-ranking" />
    <author>
      <name>稻草人.L</name>
    </author>
    <content type="html">&lt;p&gt;昨天发现的blog &lt;a class="reference external" href="http://amix.dk/blog/post/19574"&gt;How Hacker News ranking algorithm works&lt;/a&gt;, 其中提取出来的计算公式如下:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Score = (P-1) / (T+2)^G

where,
P = points of an item (and -1 is to negate submitters vote)
T = time since submission (in hours)
G = Gravity, defaults to 1.8 in news.arc
&lt;/pre&gt;
&lt;p&gt;其中随着时间T的增长, Score会越来越低. 而重力G, 则控制了Score衰减速度. 文章中提供了在 &lt;a class="reference external" href="http://www.wolframalpha.com"&gt;Wolfram Alpha&lt;/a&gt; (好工具)的具体图示.&lt;/p&gt;
&lt;p&gt;补充自己的两个简单模拟.&lt;/p&gt;
&lt;p&gt;新Item1获得的Point比旧Item2的Point少. 这里设定P1=30, P2=60, 外加4小时的提取发布. &lt;a class="reference external" href="http://goo.gl/y6puH"&gt;Query1&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
plot(
  (30 - 1) / (t + 2)^1.8,
  (60 - 1) / (t + 2 + 4)^1.8
) where t=0..24
&lt;/pre&gt;
&lt;p&gt;可以看到, 有个交叉点. 在交叉点前部分, Item1得到的Point比Item2少, 但利用时间优势(4小时)可以获得比Item2高的Score. 随着时间的流逝, 优势流失, 最终在一个时间点后分数低于Point高的Item.&lt;/p&gt;
&lt;p&gt;再看一例子, &lt;a class="reference external" href="http://goo.gl/Nycfk"&gt;Query2&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
plot(
    (1 - 1 + 5 * t) / (t + 2)^1.8,
    (61 - 1) / (t + 2 + b)^1.8
) where t=0..24, b=2
&lt;/pre&gt;
&lt;p&gt;新Item的Point以5的速度递增, 当b==2, 交叉点在t约9的地方, 此时大概新Item有45point. 当这个b越大(旧Item发布时间越早), 交叉点越靠前. 利用别人的时间劣势, 即使较少的point也能成为一时的赢家.&lt;/p&gt;
&lt;p&gt;在图示中, 看到类抛物线. 对于带时间区间的热榜, 可以考虑利用此算法吧. 热度比不是简单的投票多或者多人购买, 比率(切线?). 有人想知道每日头条, 有人只是想知道&amp;quot;刚刚大家的眼球给了谁&amp;quot;, 这样的信息不要等到其爬到顶点才告诉我.&lt;/p&gt;
&lt;p&gt;这算法, 纯理论上, 一定程度减轻 &lt;a class="reference external" href="http://zh.wikipedia.org/zh/%E9%A9%AC%E5%A4%AA%E6%95%88%E5%BA%94"&gt;马太效应(Matthew Effect)&lt;/a&gt; &amp;quot;多的越多, 少的越少&amp;quot;规则. 联系现实, 只要能获取到位置得到焦点, 就有机会反过来利用马太效应获取到更多的眼球. 营销手段应该也带这类似的思考吧?&lt;/p&gt;
&lt;p&gt;不带证明地认为, 此算法受时间影响蛮大的, 新闻类资讯天生带时间属性, 挺对应的. 随时间增长, 新闻不再是新闻. 但也因为这个, 午夜发生的信息如果更新在午夜, 一早就被更多信息覆盖且没被再发现(信息爆炸时代), 就没翻身之地了. 用微博就有此经验, 朋友的信息被其他信息覆盖而丢失.&lt;/p&gt;
&lt;p&gt;在Hacker News上面的 &lt;a class="reference external" href="http://news.ycombinator.com/item?id=1781013"&gt;Comments&lt;/a&gt; 也有提到这点, &lt;a class="reference external" href="http://news.ycombinator.com/item?id=1781358"&gt;Here&lt;/a&gt;. 对于全球性的互联网, 的确没有午夜. 但对于区域性的互联网...就应该考虑这个问题了. 在PV少的时段发布的信息是否应该作一个T值修正. 或者, 简单就好.&lt;/p&gt;
&lt;p&gt;其实还狠好奇那个重力G是怎样计算, 怎样恒定的. 根据信息的质量调制G值, 对于垃圾/广告信息可以G无限大, 或者直接秒杀. 但对于非特定领域信息, 例如喜好, 一个信息可以让一部人喜欢, 一部分人厌恶, 怎样去恒定此信息质量. 这应该是Reddit在解决的问题, &lt;a class="reference external" href="http://amix.dk/blog/post/19588"&gt;How Reddit ranking algorithms work&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;ps.不知道 &lt;a class="reference external" href="http://digg.com/"&gt;Digg&lt;/a&gt; 的算法是怎样的? 她的标题就是 &amp;quot;The Lastest News Headlines, Videos and Images&amp;quot;.&lt;/p&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
&amp;quot;The best news, videos and picturs on the web as voted on by the Digg community. Breaking news on Technology, Politics, Entertainment, and more!&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;在此, 为大学挂科的线性代数好好惭愧下.&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- Mon Nov 28 14:03:15 CST 2011 --&amp;gt;&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="/develop-notes/feed.atom">
    <title type="text">Notes on the Reddit ranking algorithms</title>
    <id>/develop-notes/2011/12/01/notes-on-the-reddit-ranking</id>
    <updated>2011-12-01T00:00:00Z</updated>
    <link href="/develop-notes/2011/12/01/notes-on-the-reddit-ranking" />
    <author>
      <name>稻草人.L</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="http://amix.dk/blog/post/19588"&gt;How Reddit ranking algorithms work&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Conslusion of Reddit's story ranking&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Submission time is a very important parameter, generally newer stories will rank higher than older&lt;/p&gt;
&lt;p&gt;都是时间相关, 但Reddit的不会像Hacker News一样其分数值随时间减少, 在提交那一刻, 已经明确了这个常数. 但后面提交的Item, 这个常数会比前面的大, 这个感觉多少有点不公平.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The first 10 upvotes count as high as the next 100. E.g. a story that has 10 upvotes and a story that has 50 upvotes will have a similar ranking&lt;/p&gt;
&lt;p&gt;越早进行upvote的人对于分数值的贡献越大, 后面upvote的发生可能就是因为这前十个的功劳.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Controversial stories that get similar amounts of upvotes and downvotes will get a low ranking compared to stories that mainly get upvotes&lt;/p&gt;
&lt;p&gt;{1000upvote, 900downvote}和{100upvote, 0downvote}, 在忽略提交时间下得到的结果是一样的.  如果后者的提交时间稍微迟点, 位置就会比前者高. 但看上去, 前者更有争议性, 吸引用户参与.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最热和最好不能同时兼得. 于是有了Reddit评论系统排序的&amp;quot;Best&amp;quot;实现 &lt;a class="reference external" href="http://blog.reddit.com/2009/10/reddits-new-comment-sorting-system.html"&gt;reddit's new comment sorting system&lt;/a&gt;.  Confidence Sort, 信心排序?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://possiblywrong.wordpress.com/2011/06/05/reddits-comment-ranking-algorithm/"&gt;Reddit’s comment ranking algorithm&lt;/a&gt; 对其实现指出原代码实现的与算法上的不一致. (已经修正了两个)&lt;/p&gt;
&lt;p&gt;拓展出来的两个阅读:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.seomoz.org/blog/reddit-stumbleupon-delicious-and-hacker-news-algorithms-exposed"&gt;Reddit, Stumbleupon, Del.icio.us and Hacker News Algorithms Exposed!&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
里面提到Del.icio.us的Popular是最近1小时收藏最多的网址. Digg.com的没详细说, 不过提到的期望很带社交性. 一个&amp;quot;威望值&amp;quot;高的人提交的信息是否比一个新手&amp;quot;发现&amp;quot;的信息中带的价值更大?&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.linkibol.com/2010/05/07/how-to-build-a-popularity-algorithm-you-can-be-proud-of/"&gt;How to Build a Popularity Algorithm You can be Proud of&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
里面是 &lt;a class="reference external" href="http://linkibol.com"&gt;linkibol&lt;/a&gt;, web2.0 social bookmarking 实现者写的记录&lt;/blockquote&gt;
&lt;p&gt;&amp;lt;!-- Thu Dec  1 22:42:54 CST 2011 --&amp;gt;&lt;/p&gt;
</content>
  </entry>
</feed>

