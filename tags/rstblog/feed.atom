<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Recent Blog Posts</title>
  <id>http://tukki.github.io/develop-notes/feed.atom</id>
  <updated>2011-10-05T00:00:00Z</updated>
  <link href="http://tukki.github.io/develop-notes/" />
  <link href="http://tukki.github.io/develop-notes/feed.atom" rel="self" />
  <subtitle type="text">Recent blog posts</subtitle>
  <generator>Werkzeug</generator>
  <entry xml:base="http://tukki.github.io/develop-notes/feed.atom">
    <title type="text">My First Rstblog Post</title>
    <id>http://tukki.github.io/develop-notes/2011/10/04/first-rstblog-post</id>
    <updated>2011-10-04T00:00:00Z</updated>
    <link href="http://tukki.github.io/develop-notes/2011/10/04/first-rstblog-post" />
    <author>
      <name>稻草人.L</name>
    </author>
    <content type="html">&lt;p&gt;It's Not Invented Here, rather than Not Invented Yet&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://tukki.github.io/develop-notes/feed.atom">
    <title type="text">why rstblog</title>
    <id>http://tukki.github.io/develop-notes/2011/10/05/why-rstblog</id>
    <updated>2011-10-05T00:00:00Z</updated>
    <link href="http://tukki.github.io/develop-notes/2011/10/05/why-rstblog" />
    <author>
      <name>稻草人.L</name>
    </author>
    <content type="html">&lt;p&gt;blogger, wordpress, myopera, 国内的新浪博客, 163博客等等, 博客服务无奇多, 还有轻博客. 其实都是服务一个目的, 记录和分享. 不同服务商提供的不同服务, 你自己按自己需求去选择合适自己的, 实在找不到解决需求的, 自己搭建一个服务自己. 开源的博客系统网上不少.&lt;/p&gt;
&lt;p&gt;就像 &lt;a class="reference external" href="http://www.wordpress.org"&gt;wordpress&lt;/a&gt;
PHP+MySQL, 外加大量的插件和模板, 无疑是现时最强大的开源独立博客系统. 如果没太大的灵活性要求, &lt;a class="reference external" href="http://www.wordpress.com"&gt;wordpress.com&lt;/a&gt;
提供的免费博客绝对够用, 只是不翻出去登录不了管理员后台了. 当然, 解决方法很多, 例如国内的 &lt;a class="reference external" href="http://www.blogcn.com"&gt;BlogCN&lt;/a&gt;
也提供了Wordress系统免费服务(注册需要手机), 或在自己购买PHP空间, 购买VPS自己搭建环境, 又或在使用Heroku/DotCloud这样的PaaS服务在上面部署.&lt;/p&gt;
&lt;p&gt;我自己比较混乱, org-mode里面零散记了点随笔, 偶尔写点text文档的记录, 导入到evernote里面, 即作为备份, 也方便自己查找. 但分享出去比较麻烦, 而且也还不成系统, 写东西也不恒心. 权当记录. 如果再开一个blog专门记录开发上的想法和问题, 必然遇到一个重复修改/编辑/发布的问题. 也没找到好的办法同步本地text文档和博客上面的数据. 这个问题不像是在 &lt;a class="reference external" href="http://en.wikipedia.org/wiki/KISS_principle"&gt;Keep it simple, Stupid!&lt;/a&gt;, 倒像是在折腾.&lt;/p&gt;
&lt;p&gt;其实, 一开始是想再看看 &lt;a class="reference external" href="http://orgmode.org"&gt;org-mode&lt;/a&gt;
的Markup-Exporting-Publishing的文档, 看这个一直在用但一直没用好的好东西能不能解决问题. 然后发现 &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt;, &lt;strong&gt;*an easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and parser system*&lt;/strong&gt;, 被这句话吸引了, 然后才发现Sphinx是在用reStructuredText作为markup language. 经常在看Sphinx生成的文档, 却现在才知道reStructuredText的存在. Latex倒还在大学时认真地安装使用过...&lt;/p&gt;
&lt;p&gt;算机缘巧合吧, google &amp;quot;python blog software&amp;quot;, 发现 &lt;a class="reference external" href="http://zine.pocoo.org/"&gt;zine&lt;/a&gt;, 不过停止更新了. 然后其去作者主页 &lt;a class="reference external" href="http://lucumr.pocoo.org/"&gt;Armin Ronacher&lt;/a&gt;. Python一大牛. 页面很特别, 然后就发现这个的 &lt;a class="reference external" href="https://github.com/mitsuhiko/rstblog"&gt;rstblog&lt;/a&gt;. Armin Ronacher的这篇 &lt;a class="reference external" href="http://lucumr.pocoo.org/2010/11/23/new-blog/"&gt;New Blog&lt;/a&gt; 完美解析了rstblog的诞生.&lt;/p&gt;
&lt;p&gt;或在只是一个认同, 一个冲动, 然后就开始了. 用了官方模板, 花了点时间解决中文文件名问题, 再把一直只是在watching的github帐号建个 &lt;a class="reference external" href="https://github.com/Tukki/develop-notes"&gt;repo&lt;/a&gt; 作博客(笔记更合适点吧)文件的备份. 迟点找个PaaS做个静态网站share出去, 基础设置完成&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;剩下的, 就是坚持了. 用make命令进行管理, build html时查错. 果然写博客和写代码都是很耗费劳力体力的活.&lt;/dt&gt;
&lt;dd&gt;(Wed Oct  5 01:49:52 CST 2011)&lt;/dd&gt;
&lt;/dl&gt;
</content>
  </entry>
  <entry xml:base="http://tukki.github.io/develop-notes/feed.atom">
    <title type="text">使rstblog支持中文名的rst文件</title>
    <id>http://tukki.github.io/develop-notes/2011/10/04/make-rstblog-support-chinese-filename</id>
    <updated>2011-10-04T00:00:00Z</updated>
    <link href="http://tukki.github.io/develop-notes/2011/10/04/make-rstblog-support-chinese-filename" />
    <author>
      <name>稻草人.L</name>
    </author>
    <content type="html">&lt;p&gt;本人使用的系统环境, Fedora 14, LANG设定en_us.UTF-8. 安装的是 &lt;a class="reference external" href="https://github.com/mitsuhiko/rstblog"&gt;github&lt;/a&gt;
上rstblog的最新版本(commit 90ca1426a2). 如果以中文作为rst文件名(像本文), 在build时会抛出异常:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
File &amp;quot;/home/lazy/.virtualenvs/rstblog/lib/python2.7/site-packages
/Werkzeug-0.8.1-py2.7.egg/werkzeug/contrib/atom.py&amp;quot;, line 309, in generate
yield u'  &amp;lt;id&amp;gt;%s&amp;lt;/id&amp;gt;\n' % escape(self.id)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 33:
 ordinal not in range(128)
make: *** [build] Error 1
&lt;/pre&gt;
&lt;p&gt;根据trace信息可以知道时Werkzeug在生成Atom时抛的错误. 查看源码, 可以知道entry时Werkzeug.atom.FeedEntry的实例, 其在初始化的时候, 如果没找到id值, 就使用url作为id值. 而rstblog是使用slug作为其url的. 这样一来, 找到修改可能了&lt;/p&gt;
&lt;p&gt;找到rstblog.builder.Context. 文档说是&amp;quot;Per rendering information&amp;quot;, 初始化就带了source_filename. 估计修改这里比较安全(未对rstblog的源码通读). &lt;strong&gt;注意下面的修改方式只能证明在我的Fedoar下能行, 不确保是否完全正确, 或在其他平台也能用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;修改方式为把source_filename再decode一次. 因为是系统上的文件, 所以可以用sys.getfilesystemencoding()获取编码方式:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#place in builder.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;default_encode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getfilesystemencoding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;#in Context.__init__()&lt;/span&gt;
&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;source_filename&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default_encode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再run_rstblog build一次, 这次没有报错.在debug_serve下测试页成功显示. 至于生成的atom是否能正确使用, 需部署到外网后再做验证&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;edit:&lt;/dt&gt;
&lt;dd&gt;因为想部署到GAE, 而GAE不支持中文文件名, 也没确定是否有方法. so, 遵守游戏规则, 改回英文名
Wed Nov 30 02:05:03 CST 2011&lt;/dd&gt;
&lt;/dl&gt;
</content>
  </entry>
  <entry xml:base="http://tukki.github.io/develop-notes/feed.atom">
    <title type="text">在dotcloud部署rstblog</title>
    <id>http://tukki.github.io/develop-notes/2011/10/05/rstblog-on-dotcloud</id>
    <updated>2011-10-05T00:00:00Z</updated>
    <link href="http://tukki.github.io/develop-notes/2011/10/05/rstblog-on-dotcloud" />
    <author>
      <name>稻草人.L</name>
    </author>
    <content type="html">&lt;p&gt;不用heroku部署的原因只有一个, 不想再对生成出来的静态文件再做一次git的源码管理.&lt;/p&gt;
&lt;p&gt;在dotcloud部署static service的 &lt;a class="reference external" href="http://docs.dotcloud.com/services/static/"&gt;官方教程&lt;/a&gt;
图文并茂. 唯一注意的时, 文中例子的dotcloud.yml和hellostatic文件夹时在统一父目录下的, 在dotcloud.yml里面用approot标识static directory. 采用此方式在rstblog的目录结构下, 回把所有的源文件都备份到dotcloud上面. 这个并不是我想要的, 我只要上传_build里面的文件就够了. 那就只利用makefile和rsync保证dotcloud.yml在_build里面, 只上传_build文件夹:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
upload:
   rsync -a static/dotcloud.yml _build/dotcloud.yml
   dotcloud push notes _build/
   &amp;#64;echo &amp;quot;Done...&amp;quot;
&lt;/pre&gt;
&lt;p&gt;这样一来, make upload的时候, 就不怕clean操作把dotcloud.yml文件删掉了.ps.Makefile, dotcloud.yml都在static有备份&lt;/p&gt;
&lt;p&gt;(Wed Oct  5 17:15:14 CST 2011)&lt;/p&gt;
</content>
  </entry>
</feed>

